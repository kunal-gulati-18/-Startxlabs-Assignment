{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","setTitle","arrayVal","setArrayVal","titleVal","setTitleVal","idValue","setidVal","show","setShow","handleClose","useEffect","localStorage","getItem","data","JSON","parse","Container","style","marginTop","Row","Col","type","placeholder","value","onChange","e","target","onClick","obj","id","push","setItem","stringify","arr","length","map","item","index","className","idval","titlevalue","newArrayVal","filter","handleDelete","Modal","onHide","Header","closeButton","Title","Body","hidden","Footer","Button","variant","updatedData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e88c5a2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Button,Container,Col,Row } from 'react-bootstrap';\nimport './bootstrap.min.css'\nconst App = () => {\n\n  const [title, setTitle] = useState('')\n  const [arrayVal, setArrayVal] = useState([])\n  const [titleVal, setTitleVal] = useState('')\n  const [idValue, setidVal] = useState(0)\n  const [show, setShow] = useState(false);\n \n\n  //adding a note\n  const handleClick = () => {\n\n    if (localStorage.getItem('notesData')) {\n\n      let value = JSON.parse(localStorage.getItem('value'));\n      value = value + 1\n      let data = JSON.parse(localStorage.getItem('notesData'))\n      let obj = {\n        id: value,\n        title\n      }\n      data.push(obj);\n      setArrayVal(data)\n      localStorage.setItem('value', JSON.stringify(value))\n      localStorage.setItem('notesData', JSON.stringify(data))\n      setTitle('');\n    }\n\n    else {\n      let i = 1;\n      let obj = {\n        id: i,\n        title\n      }\n     \n      let arr = []\n      arr.push(obj)\n      setArrayVal(arr)\n      localStorage.setItem('value', JSON.stringify(i))\n      localStorage.setItem('notesData', JSON.stringify(arr))\n      setTitle('')\n    }\n  }\n\n\n  //deleting the note\n  const handleDelete = (idval) => {\n    let newArrayVal = arrayVal.filter((item) => {\n      if (item.id !== idval) {\n        return item\n      }\n    })\n\n    setArrayVal(newArrayVal)\n    localStorage.setItem('notesData', JSON.stringify(newArrayVal))\n  }\n\n  //updating a note\n  const handleUpdate = () => {\n   let updatedData = arrayVal.map((item) => {\n      if (item.id === idValue) {\n        item.title = titleVal;\n        return item;\n      }\n\n      else{\n        return item;\n      }\n    })\n\n    setArrayVal(updatedData)\n    localStorage.setItem('notesData', JSON.stringify(updatedData))\n    setShow(false);\n    setTitleVal('')\n  }\n\n  \n  const handleClose = () => setShow(false);\n  const handleShow = (idval, titlevalue) => {\n\n    setidVal(idval);\n    setTitleVal(titlevalue);\n    setShow(true);\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('notesData')) {\n      let data = JSON.parse(localStorage.getItem('notesData'));\n      setArrayVal(data)\n\n    }\n  }, [])\n\n  return (\n    <>\n    <Container style={{marginTop:\"1em\"}}>\n      <Row>\n        <Col>\n        <input type=\"text\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n      <button onClick={handleClick}>Add Note</button>\n\n      {\n        arrayVal.length !== 0 ? (\n          arrayVal.map((item, index) => (\n            <div key={index}>\n              {item.title} <i className=\"fas fa-edit\" onClick={() => handleShow(item.id, item.title)}></i>  <i className=\"fas fa-trash-alt\" onClick={() => handleDelete(item.id)}></i>\n            </div>\n          ))\n\n        ) : <div>No notes present!!</div>\n      }\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit your Note..</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input type=\"text\" value={idValue} onChange={(e) => setTitleVal(e.target.value)} hidden />\n          <input type=\"text\" placeholder=\"Enter title\" value={titleVal} onChange={(e) => setTitleVal(e.target.value)} />\n        </Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"success\" onClick={handleUpdate}>\n            Update\n          </Button>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        </Col>\n      </Row>\n    </Container>\n      \n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}